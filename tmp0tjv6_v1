from flask import Flask, redirect, url_for, render_template, request, redirect, session, flash
from flask_sqlalchemy import SQLAlchemy
from flask_wtf import FlaskForm
from wtforms import StringField, SubmitField, DecimalField
from wtforms.validators import DataRequired
import smtplib
import os
from datetime import timedelta, datetime
import sqlite3
import pandas as pd
from Web_app_2 import ml_module

app = Flask(__name__)

#Create Secret Key
app.config['SECRET_KEY']="retggrre1"

app.config["SQLALCHEMY_DATABASE_URI"] = "sqlite:///Classification.db"
conn = sqlite3.connect('Classification.db')

#c = conn.cursor()
#c.execute('CREATE TABLE classification_db'\
#          '(Petal_length REAL, Petal_width REAL, Sepal_length REAL, Sepal_width REAL)')

# Initialize the app
db = SQLAlchemy(app)


class FlowerForm(FlaskForm):
    length = DecimalField("Length", validators =[DataRequired()])
    submit = SubmitField("Submit")



@app.route("/", methods = ["POST", "GET"])
def home():
    length = None
    form = FlowerForm()
    if form.validate_on_submit():
        length = form.length.data
        form.length.data = ''
        return redirect(url_for("result", length = length, form=form))
    return render_template("home.html", length = length, form = form)


@app.route("/result", methods = ["POST", "GET"])
def result():
    return render_template("result.html")
    
    
if __name__ == "__main__":
    app.run(debug=True)
    